# Generated by Django 4.0.2 on 2022-02-28 16:46

import common.storage
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_update_password', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('zip_code', models.CharField(max_length=5)),
                ('base_address', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'building',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'floor',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'membership',
            },
        ),
        migrations.CreateModel(
            name='Shopper',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=20)),
                ('nickname', models.CharField(max_length=20, unique=True)),
                ('mobile_number', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(max_length=50)),
                ('gender', models.BooleanField()),
                ('birthday', models.DateField()),
                ('height', models.IntegerField(null=True)),
                ('weight', models.IntegerField(null=True)),
                ('membership', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='user.membership')),
            ],
            options={
                'db_table': 'shopper',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='Wholesaler',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=60)),
                ('mobile_number', models.CharField(max_length=11)),
                ('phone_number', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(max_length=50)),
                ('company_registration_number', models.CharField(max_length=12, unique=True)),
                ('business_registration_image_url', models.ImageField(max_length=200, storage=common.storage.MediaStorage, upload_to='')),
                ('zip_code', models.CharField(max_length=5)),
                ('base_address', models.CharField(max_length=200)),
                ('detail_address', models.CharField(max_length=100)),
                ('is_approved', models.BooleanField()),
            ],
            options={
                'db_table': 'wholesaler',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='ShopperAddress',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, null=True)),
                ('receiver', models.CharField(max_length=20)),
                ('mobile_number', models.CharField(max_length=11)),
                ('phone_number', models.CharField(max_length=11, null=True)),
                ('zip_code', models.CharField(max_length=5)),
                ('base_address', models.CharField(max_length=200)),
                ('detail_address', models.CharField(max_length=100)),
                ('is_default', models.BooleanField()),
                ('shopper', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.shopper')),
            ],
            options={
                'db_table': 'shopper_address',
            },
        ),
        migrations.CreateModel(
            name='BuildingFloor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.building')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.floor')),
            ],
            options={
                'db_table': 'building_floor',
                'unique_together': {('building', 'floor')},
            },
        ),
    ]
